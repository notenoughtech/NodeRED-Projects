[{"id":"f5a4dbb0.16b0d8","type":"tab","label":"Washing Machine Notifications","disabled":false,"info":"![enter image description here](https://notenoughtech.com/wp-content/uploads/2021/05/maxresdefault-5.jpg)\n\nTurns out the vibration sensors are just not good enough to detect the vibrations of the modern appliances. Power monitoring is the way, and this profile uses the power usage data to detect operational modes and notify you via Android, Alexa, Google Assistant when the cycle is complete.\n - [Complete Instructions](https://notenoughtech.com/home-automation/smarting-up-comfee-miniplus-dishwasher/)\n\n**Features**:\n\n-   Google Home, Android, Alexa, and Windows 10 Notifications \n-   No timers, nothing to set up    \n-   Nagging mode for Google Home    \n-   Cost of washing (supports multi tarifs)    \n\nYou will need the following nodes:\n\n - node-red-contrib-castv2 (for google home)\n - node-red-contrib-join-joaoapps (for android)\n - node-red-contrib-alexa-notifyme\n\nand [Join app](https://play.google.com/store/apps/details?id=com.joaomgcd.join&hl=en_GB) for Android notifications \n\n## Recommended Relays\nPlease check the power consumption of your appliance before picking a relay to stay within its operational limits.\n\n - Sonoff POWR2 [Aliexpress](https://s.click.aliexpress.com/e/_AAkss7)|[AmazonUK](https://amzn.to/2TJRPN6)|[AmazonUS](https://amzn.to/2u9E0bs)|[Itead store](http://shrsl.com/1i9e8)|[Banggood](https://www.banggood.com/custlink/mGmvyM4HC2)\n - Sonoff Dual R3 (one relay for 2 devices)[Aliexpress](https://s.click.aliexpress.com/e/_9fbgFZ)|[AmazonUK](https://amzn.to/3flRBVp)|[Itead store]([https://shrsl.com/2kvip](https://shrsl.com/2kvip))\n - Shelly 1PM [AmazonUK](https://amzn.to/3uufKPd)|[AmazonUS](https://amzn.to/3aOdE4S)|[Shelly Store](https://shelly.cloud/products/shelly-1pm-smart-home-automation-relay/)\n - Shelly 2.5 (one relay for 2 devices) [AmazonUK](https://amzn.to/34h2KRg)|[AmazonUS](https://amzn.to/34nAOLo)|[Shelly Store](https://shop.shelly.cloud/shelly-2.5-ce-ul-wifi-smart-home-automation#54)\n \n\n\n# Settings\nSee Settings node in the setup menu - each setting had been explained in the comment. Depending on the MQTT message structure, you will need to adjust it to your needs."},{"id":"3c05b71f.655708","type":"group","z":"f5a4dbb0.16b0d8","name":"Notifications","style":{"label":true,"fill":"#ffffff"},"nodes":["c6782296.81743","60db40cd.ebfbe","afb7e612.79f668","cfc19bf0.c19978"],"x":614,"y":93,"w":1268,"h":454},{"id":"60db40cd.ebfbe","type":"group","z":"f5a4dbb0.16b0d8","g":"3c05b71f.655708","name":"Goolge Home + Nagging","style":{"stroke":"#0070c0","fill":"#bfdbef","label":true},"nodes":["46cc23ad.e13b0c","c02b6728.d23e58","6efbadd0.ca5874","664ee927.156f28","7e66a8ad.81eea8","989d0d01.d1e3f","af142094.30d8a","cca365f5.0aed68"],"x":694,"y":119,"w":1162,"h":162},{"id":"c6782296.81743","type":"group","z":"f5a4dbb0.16b0d8","g":"3c05b71f.655708","name":"Alexa","style":{"stroke":"#92d04f","fill":"#e3f3d3","label":true},"nodes":["8c4a168d.8ac9e8","b1ee3733.8ad528"],"x":714,"y":319,"w":452,"h":82},{"id":"afb7e612.79f668","type":"group","z":"f5a4dbb0.16b0d8","g":"3c05b71f.655708","name":"Android","style":{"stroke":"#ffC000","fill":"#ffefbf","label":true},"nodes":["12ae5a42.54d216","3fb10204.eac97e"],"x":714,"y":439,"w":392,"h":82},{"id":"82f6325f.fb145","type":"function","z":"f5a4dbb0.16b0d8","name":"Calculate power","func":"var power = msg.payload.Outputs[0].Load;  //adjust message structure to your needs \nvar noPowerOff = flow.get(\"noPowerOff\");  // get appliance type - impacts the nagging mode\n\nvar res   = flow.get(\"Resolution\");\nvar total = flow.get(\"TotalPower\");\nvar cost  = flow.get(\"CostArray\");\nvar tariff = flow.get(\"Tariff\");\nvar metricsf = flow.get(\"MetricFrequency\");\nvar standby = flow.get(\"StandbyPower\");\nvar operation = flow.get(\"Operation\");\nvar currentWash = flow.get(\"CurrentWashCycle\");\nvar history = flow.get(\"WashingHistory\");\n\nvar date = new Date();\nvar dateS = date.getTime()/1000;\nvar hour = date.getHours();\n\nfunction secondsToHms(d) {\n    d = Number(d);\n    var h = Math.floor(d / 3600);\n    var m = Math.floor(d % 3600 / 60);\n    return ('0' + h).slice(-2) + \"h \" + ('0' + m).slice(-2)+\"min\";\n}\n\n//push element\ntotal.unshift(power);\n//remove X elementh\nif(total[res] === undefined) {flow.set(\"TotalPower\", total);}\nelse {\n    total.splice(res, 1);\n    flow.set(\"TotalPower\", total);\n}\n\n\n//calculate average\nvar sum = total;\nfunction add(accumulator, a) {\n    return accumulator + a;\n}\n\nvar average = (sum.reduce(add)/total.length);\nflow.set(\"average\", average);\n\n\n\n\n// apply correct price tarif to calculate the power consumption in cost per minute units\nvar price;\nif(hour >= tariff.Start && hour < tariff.End){\n    price = tariff.CostDay;\n}\nif(hour < tariff.Start || hour >= tariff.End){\n    price = tariff.CostNight;\n}\n\nvar costPerMinute =  power/1000 * price / (60* (60/metricsf));\ncost.push(costPerMinute);\nflow.set(\"CostArray\", cost);\n\n\n//define different operational states to make sure machine follows the cycle states\n\n//appliance switched off\nif(average === 0){\n    flow.set(\"Operation\", \"off\");\n    return [msg,null];\n}\n\n\n//appliance on standby (before & after the wash cycle)\nif(noPowerOff === true){\n    if(average >= standby && operation === \"off\" || operation === \"finished\" ){\n        flow.set(\"Operation\", \"standby\");\n        currentWash.standbyTimeStart = dateS;\n        \n    }\n}\nif(noPowerOff === false){\n    if(average >= standby && operation === \"off\"){\n        flow.set(\"Operation\", \"standby\");\n        currentWash.standbyTimeStart = dateS;\n        \n    }\n}\n\n\n//appliance in the wash cycle\nif(average > 5 ){\n    flow.set(\"collected\", false);\n    flow.set(\"Operation\", \"washing\");\n    if(currentWash.standbyTimeStart === null){\n        currentWash.standbyTimeStart = dateS;\n        currentWash.standbyTimeStop = dateS;\n    }\n    currentWash.standbyTimeStop = dateS;\n    currentWash.washTimeStart = dateS;\n    \n}\n\n\n//apliance has finished the wash cycle \nif(average < 5 && average >= standby && operation === \"washing\"){\n    flow.set(\"Operation\", \"finished\");\n    currentWash.washTimeStop = dateS;\n    currentWash.washFinishStart = dateS;\n    \n    //total cost\n    var sumCost = flow.get(\"CostArray\");\n    var costofpower = sumCost.reduce(add);\n    currentWash.totalCost = Math.round(costofpower * 100) / 100;\n    \n    // support for devices without complete power off\n    if(noPowerOff === true){\n        currentWash.washFinishStop = dateS;\n        wash = {\n            \"date\" : date,\n            \"cost\" : currentWash.totalCost,\n            \"TotalWashTime\" : secondsToHms(currentWash.washTimeStart -currentWash.standbyTimeStart),\n            \"TotalStandby\" : secondsToHms(currentWash.standbyTimeStop - currentWash.standbyTimeStart),\n            \"TotalWash\" : secondsToHms(currentWash.washTimeStop - currentWash.washTimeStart),\n            \"TotalFinishWait\": secondsToHms(currentWash.washFinishStop - currentWash.washFinishStart)\n        };\n        \n        flow.set(\"collected\", true);\n        history.push(wash);\n        flow.set(\"WashingHistory\", history);\n        flow.set(\"CostArray\", [0]);\n        \n        var cycle = {\"standbyTimeStart\": null,\n            \"standbyTimeStop\": null,\n            \"washTimeStart\": null,\n            \"washTimeStop\": null,\n            \"washFinishStart\": null,\n            \"washFinishStop\": null,\n            \"totalCost\": 0,\n    }\n        flow.set(\"CurrentWashCycle\", cycle);\n    }\n    \n    \n    return [null, msg];\n}\n\n\n//washing collected\nif(average < standby && operation === \"finished\"){\n    currentWash.washFinishStop = dateS;\n    \n    wash = {\n        \"date\" : date,\n        \"cost\" : currentWash.totalCost,\n        \"TotalWashTime\" : secondsToHms(currentWash.washTimeStart -currentWash.standbyTimeStart),\n        \"TotalStandby\" : secondsToHms(currentWash.standbyTimeStop - currentWash.standbyTimeStart),\n        \"TotalWash\" : secondsToHms(currentWash.washTimeStop - currentWash.washTimeStart),\n        \"TotalFinishWait\": secondsToHms(currentWash.washFinishStop - currentWash.washFinishStart)\n    };\n    \n    flow.set(\"collected\", true);\n    history.push(wash);\n    flow.set(\"WashingHistory\", history);\n    flow.set(\"CostArray\", [0]);\n    \n    var cycle = {\"standbyTimeStart\": null,\n        \"standbyTimeStop\": null,\n        \"washTimeStart\": null,\n        \"washTimeStop\": null,\n        \"washFinishStart\": null,\n        \"washFinishStop\": null,\n        \"totalCost\": 0,\n}\n    flow.set(\"CurrentWashCycle\", cycle);\n    flow.set(\"Operation\", \"off\");\n}\n\n\n \n","outputs":2,"noerr":0,"initialize":"","finalize":"","libs":[],"x":400,"y":340,"wires":[[],["f9092d33.c042e"]]},{"id":"12ae5a42.54d216","type":"function","z":"f5a4dbb0.16b0d8","g":"afb7e612.79f668","name":"Join ","func":"var currentCycle = flow.get(\"CurrentWashCycle\");\n\nvar date = new Date();\nmsg.payload = {};\n\nfunction secondsToHms(d) {\n    d = Number(d);\n    var h = Math.floor(d / 3600);\n    var m = Math.floor(d % 3600 / 60);\n    return ('0' + h).slice(-2) + \"h \" + ('0' + m).slice(-2)+\"min\";\n}\n\nvar wash = {\n        \"date\" : date,\n        \"cost\" : currentCycle.totalCost,\n        \"TotalWashTime\" : secondsToHms(currentCycle.washTimeStart -currentCycle.standbyTimeStart),\n        \"TotalStandby\" : secondsToHms(currentCycle.standbyTimeStop - currentCycle.standbyTimeStart),\n        \"TotalWash\" : secondsToHms(currentCycle.washTimeStop - currentCycle.washTimeStart),\n        \"TotalFinishWait\": secondsToHms(currentCycle.washFinishStop - currentCycle.washFinishStart)\n    };\n\nvar phone = global.get(\"JOIN_mi9\");\nvar desktop = global.get(\"JOIN_desktop\");\nvar laptop = global.get(\"JOIN_laptop\");\n\nmsg.push = {\n    \"deviceIds\": phone +\",\"+ desktop,\n    \"title\":\"Your washing has been done in \" + wash.TotalWashTime,\n    \"text\":\"Don't be a fool - go and take out the laundry before wife nags you! The total cost of the wash is: £\" + wash.cost,\n    \"icon\":\"https://cdn3.iconfinder.com/data/icons/household-appliances-2/500/Automatic_automatic_machine_clean_machine_wash_washing-512.png\",\n};\n\nreturn msg;\n","outputs":1,"noerr":0,"initialize":"","finalize":"","x":790,"y":480,"wires":[["3fb10204.eac97e"]]},{"id":"46cc23ad.e13b0c","type":"delay","z":"f5a4dbb0.16b0d8","g":"60db40cd.ebfbe","name":"","pauseType":"delay","timeout":"5","timeoutUnits":"minutes","rate":"1","nbRateUnits":"1","rateUnits":"second","randomFirst":"1","randomLast":"5","randomUnits":"seconds","drop":false,"x":840,"y":160,"wires":[["7e66a8ad.81eea8"]]},{"id":"c02b6728.d23e58","type":"switch","z":"f5a4dbb0.16b0d8","g":"60db40cd.ebfbe","name":"Nagging enabled","property":"nagging","propertyType":"flow","rules":[{"t":"true"}],"checkall":"true","repair":false,"outputs":1,"x":1210,"y":160,"wires":[["6efbadd0.ca5874"]]},{"id":"6efbadd0.ca5874","type":"function","z":"f5a4dbb0.16b0d8","g":"60db40cd.ebfbe","name":"Random Naggings of my WiFi","func":"var nagging = [\n    \"If you don't take care of washing I will divorce you\",\n    \"Stop being useless and get the washing out\",\n    \"Either you take the washing out right now, or you sleep on the sofa tonight\",\n    \"How many times do I have to tell you to empty the washing machine\",\n    \"Washing machine is not going to empty itself - move your bum\"\n    ];\nvar random = nagging[Math.floor(Math.random() * nagging.length)];\nmsg.payload = {\n    app: \"DefaultMediaReceiver\",\n    type: \"TTS\",\n    text: random,\n    speed: 1, // optional to adjust TTS speed, defaults to 1\n    language: \"en\", // optional to set TTS language, default to en\n    metadata: { // optional unless desired, follows normal metadata rules noted above\n      title: \"Media title\"\n    }\n  }\nreturn msg;","outputs":1,"noerr":0,"initialize":"","finalize":"","x":1450,"y":160,"wires":[["664ee927.156f28"]]},{"id":"a43a5416.3158d8","type":"comment","z":"f5a4dbb0.16b0d8","name":"Settings","info":"","x":180,"y":100,"wires":[]},{"id":"8c4a168d.8ac9e8","type":"function","z":"f5a4dbb0.16b0d8","g":"c6782296.81743","name":"Alexa Notification","func":"msg.payload = \"Your washing is ready!\";\nreturn msg;\n","outputs":1,"noerr":0,"initialize":"","finalize":"","x":830,"y":360,"wires":[["b1ee3733.8ad528"]]},{"id":"b1ee3733.8ad528","type":"alexa-notifyme","z":"f5a4dbb0.16b0d8","g":"c6782296.81743","name":"Alexa Notification","notification":"","x":1050,"y":360,"wires":[[]]},{"id":"3fb10204.eac97e","type":"join-message","z":"f5a4dbb0.16b0d8","g":"afb7e612.79f668","name":"","text":"","title":"","url":"","notificationicon":"","joinConfig":"2d4ff715.71eb38","x":1020,"y":480,"wires":[[]]},{"id":"bbdb33c9.120cb","type":"function","z":"f5a4dbb0.16b0d8","name":"Settings","func":"//see Setup tab\n","outputs":1,"noerr":0,"initialize":"//Electrical tariff info   \n\nvar tariff = {\"CostDay\": 0.183, \n              \"CostNight\": 0.183,\n              \"Start\": 7,\n              \"End\": 19};\nflow.set(\"Tariff\", tariff);\nflow.set(\"CostArray\", [0]);\n\n//Google Home Nagging (not available for devices that can't leave standby mode)\nvar nagging = {\n    \"status\" : false,\n    \"frequency\" : 5};\nflow.set(\"Nagging\", nagging); \n\n\n// washing Machine settings\nflow.set(\"noPowerOff\", true); //set to true if your device doesn't have 0W shutdown mode\n\nflow.set(\"StandbyPower\", 1);   //average power in standby mode\nflow.set(\"hostname\", \"washingmachine.lan\");   //in case you use HTTP\nflow.set(\"TotalPower\", []);   \nflow.set(\"Resolution\", 5);         // number of measurements taken for rolling power average\nflow.set(\"MetricFrequency\", 60);  // how often washing machine reports back\nflow.set(\"Operation\", \"off\");     //current operation state   off/standby/washing/finished\n\nvar cycle = {\"standbyTimeStart\": null,\n        \"standbyTimeStop\": null,\n        \"washTimeStart\": null,\n        \"washTimeStop\": null,\n        \"washFinishStart\": null,\n        \"washFinishStop\": null,\n        \"totalCost\": 0,\n}\nflow.set(\"CurrentWashCycle\",cycle);\nflow.set(\"WashingHistory\", []);  ","finalize":"","libs":[],"x":180,"y":140,"wires":[[]]},{"id":"4ea87f4e.99a92","type":"mqtt in","z":"f5a4dbb0.16b0d8","name":"Washing Machine","topic":"devices/washingmachine/status","qos":"0","datatype":"json","broker":"6e117ba5.8026e4","x":170,"y":340,"wires":[["82f6325f.fb145"]]},{"id":"664ee927.156f28","type":"castv2-sender","z":"f5a4dbb0.16b0d8","g":"60db40cd.ebfbe","name":"","connection":"efeef0d9.66d91","x":1680,"y":240,"wires":[["af142094.30d8a"]]},{"id":"7e66a8ad.81eea8","type":"switch","z":"f5a4dbb0.16b0d8","g":"60db40cd.ebfbe","name":"isCollected","property":"collected","propertyType":"flow","rules":[{"t":"true"}],"checkall":"true","repair":false,"outputs":1,"x":1030,"y":160,"wires":[["c02b6728.d23e58"]]},{"id":"989d0d01.d1e3f","type":"link in","z":"f5a4dbb0.16b0d8","g":"60db40cd.ebfbe","name":"","links":["af142094.30d8a"],"x":735,"y":160,"wires":[["46cc23ad.e13b0c"]]},{"id":"af142094.30d8a","type":"link out","z":"f5a4dbb0.16b0d8","g":"60db40cd.ebfbe","name":"","links":["989d0d01.d1e3f"],"x":1815,"y":240,"wires":[]},{"id":"cfc19bf0.c19978","type":"link in","z":"f5a4dbb0.16b0d8","g":"3c05b71f.655708","name":"","links":[],"x":655,"y":360,"wires":[["8c4a168d.8ac9e8"]]},{"id":"f9092d33.c042e","type":"link out","z":"f5a4dbb0.16b0d8","name":"","links":["cca365f5.0aed68"],"x":535,"y":400,"wires":[]},{"id":"cca365f5.0aed68","type":"link in","z":"f5a4dbb0.16b0d8","g":"60db40cd.ebfbe","name":"","links":["f9092d33.c042e"],"x":1495,"y":240,"wires":[["664ee927.156f28"]]},{"id":"2d4ff715.71eb38","type":"join-config","name":"Join Configuration","register":true},{"id":"6e117ba5.8026e4","type":"mqtt-broker","name":"MQTT","broker":"home.local","port":"1883","clientid":"","usetls":false,"protocolVersion":"4","keepalive":"60","cleansession":true,"birthTopic":"","birthQos":"0","birthPayload":"","birthMsg":{},"closeTopic":"","closeQos":"0","closePayload":"","closeMsg":{},"willTopic":"","willQos":"0","willPayload":"","willMsg":{},"sessionExpiry":""},{"id":"efeef0d9.66d91","type":"castv2-connection","name":"","target":"Google Home","host":"","port":"8009"}]